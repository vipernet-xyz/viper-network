syntax = "proto3";
package x.requestors;

import "gogoproto/gogo.proto";

option go_package = "github.com/vipernet-xyz/viper-network/x/requestors/types";

message MsgProtoStake {
	option (gogoproto.equal) = true;
	option (gogoproto.goproto_stringer) = false;
	option (gogoproto.goproto_getters) = false;
	option (gogoproto.messagename) = true;

	bytes pub_key = 1 [(gogoproto.jsontag) = "pubkey", (gogoproto.moretags) = "yaml:\"pubkey\""];
	repeated string chains = 2 [(gogoproto.jsontag) = "chains", (gogoproto.moretags) = "yaml:\"chains\""];
	string value = 3 [(gogoproto.customtype) = "github.com/vipernet-xyz/viper-network/types.BigInt", (gogoproto.nullable) = false, (gogoproto.jsontag) = "value", (gogoproto.moretags) = "yaml:\"value\""];
	repeated string geo_zones = 4 [(gogoproto.jsontag) = "geo_zones", (gogoproto.moretags) = "yaml:\"geo_zones\""];
	int32 num_servicers = 5 [(gogoproto.jsontag) = "num_servicers", (gogoproto.moretags) = "yaml:\"num_servicers\""];
}


message MsgBeginUnstake {
	option (gogoproto.equal) = true;
	option (gogoproto.goproto_stringer) = false;
	option (gogoproto.goproto_getters) = false;
	option (gogoproto.messagename) = true;

	bytes Address = 1 [(gogoproto.casttype) = "github.com/vipernet-xyz/viper-network/types.Address", (gogoproto.jsontag) = "application_address", (gogoproto.moretags) = "yaml:\"application_address\""];
}

message MsgUnjail {
	option (gogoproto.equal) = true;
	option (gogoproto.goproto_stringer) = false;
	option (gogoproto.goproto_getters) = false;
	option (gogoproto.messagename) = true;

	bytes AppAddr = 1 [(gogoproto.casttype) = "github.com/vipernet-xyz/viper-network/types.Address", (gogoproto.jsontag) = "address", (gogoproto.moretags) = "yaml:\"address\""];
}

